// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  password       String
  name           String
  role           String    @default("no role")
  active         Boolean   @default(true)
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
  createdRuangan Ruangan[]
  historyLog     Log[]
}

model Ruangan {
  noRuangan             String   @id @default(cuid())
  namaRuangan           String
  kapasitasRuangan      String
  keteranganProjector   String   @default("-")
  keteranganSoundSystem String   @default("-")
  jadwal                String   @default("-")
  statusRuangan         String   @default("Available")
  komisi                String   @default("-")
  user                  User?    @relation(fields: [userId], references: [id])
  userId                Int?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}

model Gudang {
  noBarang     Int      @id @default(autoincrement())
  namaBarang   String
  jumlahBarang Int
  lokasiGudang String
  keterangan   String   @default("-")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  nilaiAset    Int      @default(0)
}

model Multimedia {
  noMultimedia        Int    @id @default(autoincrement())
  namaMultimedia      String
  jenisMultimedia     String
  lokasiMultimedia    String
  jumlahMultimedia    Int
  peminjamMultimedia  String @default("-")
  deskripsiMultimedia String @default("-")
  nilaiAset           Int    @default(0)
}

model AsetLain {
  noAsetLain        Int    @id @default(autoincrement())
  namaAsetLain      String
  jenisAsetLain     String
  lokasiAsetLain    String
  jumlahAsetLain    Int
  peminjamAsetLain  String @default("-")
  deskripsiAsetLain String @default("-")
  nilaiAset         Int    @default(0)
}

model SuratMasuk {
  noSuratMasuk      String   @id @unique @default(cuid())
  tanggalMasuk      DateTime @default(now()) @db.Date
  tanggalSuratMasuk DateTime @default(now()) @db.Date
  pengirimMasuk     String
  perihalMasuk      String
  eventMasuk        String
  disposisiMasuk    String
}

model SuratKeluar {
  noSuratKeluar      String   @id @default(cuid())
  tanggalSuratKeluar DateTime @default(now()) @db.Date
  tujuanKeluar       String
  perihalKeluar      String
}

model AdministrasiKeuangan {
  noAdministrasi       Int      @id @default(autoincrement())
  namaProgram          String
  tanggalAdministrasi  DateTime @default(now()) @db.Date
  nominalAdministrasi  Int
  tipeAdministrasi     String
  penerimaAdministrasi String
  uraianAdministrasi   String   @default("")
}

model ProgramKerja {
  noProker         Int      @id @default(autoincrement())
  kodeProgram      String   @unique
  komisi           String
  namaProgram      String
  penanggungJawab  String
  tujuanKegiatan   String
  targetPeserta    String
  waktuPelaksanaan String
  rincianRencana   String   @default("")
  totalAnggaran    Int
  realisasi        Int      @default(0)
  statusProker     String   @default("Pending")
  tanggalProker    DateTime @default(now()) @db.Date
  laporanProker    String   @default("-")
}

model Viatikum {
  noViatikum  Int    @id @default(autoincrement())
  kodeProgram String @unique
  nama        String
  kelompok    String
  viatikum    Int
  pertahun    Int
  tahun       Int
  keterangan  String @default("-")
}

model Log {
  noLog       Int      @id @default(autoincrement())
  tanggalLog  DateTime @default(now())
  user        User?    @relation(fields: [userId], references: [id])
  userId      Int?
  kategoriLog String
  actionLog   String
  keterangan  String
}
